[{"C:\\Users\\Ripudaman\\Desktop\\Development\\projects\\testapp\\src\\index.tsx":"1","C:\\Users\\Ripudaman\\Desktop\\Development\\projects\\testapp\\src\\components\\BookDetails.tsx":"2","C:\\Users\\Ripudaman\\Desktop\\Development\\projects\\testapp\\src\\App.tsx":"3","C:\\Users\\Ripudaman\\Desktop\\Development\\projects\\testapp\\src\\ApolloClient.ts":"4","C:\\Users\\Ripudaman\\Desktop\\Development\\projects\\testapp\\src\\reportWebVitals.ts":"5"},{"size":665,"mtime":1606794499733,"results":"6","hashOfConfig":"7"},{"size":883,"mtime":1606797751094,"results":"8","hashOfConfig":"7"},{"size":1085,"mtime":1606849617811,"results":"9","hashOfConfig":"7"},{"size":796,"mtime":1606853306100,"results":"10","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s0o0dg",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ripudaman\\Desktop\\Development\\projects\\testapp\\src\\index.tsx",[],"C:\\Users\\Ripudaman\\Desktop\\Development\\projects\\testapp\\src\\components\\BookDetails.tsx",[],"C:\\Users\\Ripudaman\\Desktop\\Development\\projects\\testapp\\src\\App.tsx",["24"],"import React,{useState} from 'react'\nimport './App.scss';\nimport BookDetails from './components/BookDetails'\nimport {Book} from './types'\nimport { useQuery} from '@apollo/client'\nimport { getThumbnails} from './ApolloClient';\n\nfunction App() {\n\n  const [showBook, setshowBook] = useState(false)\n  const [bookID, setBookID] = useState(0)\n  const {loading,error,data} = useQuery(getThumbnails)\n\n\n  const loadBook = (id:number) => {\n    setshowBook(!showBook)\n    setBookID(id)\n  }\n\n  const addBook = () => {\n   console.log(\"Add Books\")\n  }\n\n  return (\n    \n      <div className=\"app\">\n        {loading === true?  <p>Loading ...</p>:\n        <div className=\"shelf\" >\n          {data.listBooks.map((book:Book) => ( \n              \n                <img src={book.thumbnail} alt=\"preview\" className=\"covers\" onClick={() =>loadBook(book.id)} />\n            ))}\n        </div>}\n        {showBook ===true?<BookDetails id={bookID} />:\n          <button className=\"add_book\" onClick={addBook} >\n            Add Book\n          </button>\n          }\n        </div>\n   \n  );\n}\n\nexport default App;\n\n","C:\\Users\\Ripudaman\\Desktop\\Development\\projects\\testapp\\src\\ApolloClient.ts",["25"],"import {ApolloClient,InMemoryCache,gql} from '@apollo/client';\r\nimport {Book} from  \"./types\"\r\n\r\nexport const apolloClient = new ApolloClient({\r\n    uri:\"http://localhost:4000/books\",\r\n    cache: new InMemoryCache(),\r\n})\r\n\r\n\r\nexport const getThumbnails = gql`\r\n    query GetThumbnails {\r\n        listBooks {\r\n            id\r\n            thumbnail\r\n        }\r\n    }\r\n`;\r\n\r\nexport const getBook = gql`\r\n    query GetBook($id:Int) {\r\n        getBook(id:$id) {\r\n            name\r\n            author\r\n            imageUri\r\n            price\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const addBook = gql`\r\n    mutation AddBook($book:Book){\r\n        addBook(book:$book) {\r\n            id\r\n            name\r\n            author\r\n            thumbnail\r\n            price\r\n            imageUri\r\n        }\r\n    }\r\n`;","C:\\Users\\Ripudaman\\Desktop\\Development\\projects\\testapp\\src\\reportWebVitals.ts",[],{"ruleId":"26","severity":1,"message":"27","line":12,"column":18,"nodeType":"28","messageId":"29","endLine":12,"endColumn":23},{"ruleId":"26","severity":1,"message":"30","line":2,"column":9,"nodeType":"28","messageId":"29","endLine":2,"endColumn":13},"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Book' is defined but never used."]